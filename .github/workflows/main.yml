name: Build FFmpeg Android

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      NDK_VERSION: 26.2.11394342

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache NDK
      id: cache-ndk
      uses: actions/cache@v3
      with:
        path: ${ANDROID_SDK_ROOT}/ndk/${{ env.NDK_VERSION }}
        key: ${{ runner.os }}-ndk-${{ env.NDK_VERSION }}

    - name: Install Android NDK
      if: steps.cache-ndk.outputs.cache-hit != 'true'
      run: |
        echo "y" | sdkmanager --install "ndk;${{ env.NDK_VERSION }}"

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config

    - name: Debug Environment
      run: |
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        echo "NDK_PATH: $ANDROID_SDK_ROOT/ndk/${{ env.NDK_VERSION }}"
        ls -la $ANDROID_SDK_ROOT/ndk/${{ env.NDK_VERSION }}/toolchains/llvm/prebuilt/linux-x86_64/bin/
        echo "PATH: $PATH"

    - name: Configure FFmpeg
      run: |
        export NDK_PATH=$ANDROID_SDK_ROOT/ndk/${{ env.NDK_VERSION }}
        export TOOLCHAIN=$NDK_PATH/toolchains/llvm/prebuilt/linux-x86_64
        export PATH=$TOOLCHAIN/bin:$PATH
        export SYSROOT=$TOOLCHAIN/sysroot
        export PREFIX=$GITHUB_WORKSPACE/prebuilt/android-arm64/ffmpeg
        
        mkdir -p $PREFIX
        
        # Verify compiler exists
        if [ ! -f "$TOOLCHAIN/bin/aarch64-linux-android21-clang" ]; then
          echo "Compiler not found at $TOOLCHAIN/bin/aarch64-linux-android21-clang"
          exit 1
        fi
        
        ./configure \
          --cross-prefix=aarch64-linux-android- \
          --sysroot=$SYSROOT \
          --prefix=$PREFIX \
          --pkg-config=$(which pkg-config) \
          --enable-version3 \
          --arch=aarch64 \
          --cpu=armv8-a \
          --target-os=android \
          --enable-neon \
          --enable-asm \
          --enable-inline-asm \
          --ar=$TOOLCHAIN/bin/llvm-ar \
          --cc=$TOOLCHAIN/bin/aarch64-linux-android21-clang \
          --cxx=$TOOLCHAIN/bin/aarch64-linux-android21-clang++ \
          --ranlib=$TOOLCHAIN/bin/llvm-ranlib \
          --strip=$TOOLCHAIN/bin/llvm-strip \
          --nm=$TOOLCHAIN/bin/llvm-nm \
          --extra-libs="-L$GITHUB_WORKSPACE/prebuilt/android-arm64/cpu-features/lib -lndk_compat" \
          --disable-autodetect \
          --enable-cross-compile \
          --enable-pic \
          --enable-jni \
          --enable-optimizations \
          --enable-swscale \
          --disable-static \
          --enable-shared \
          --enable-pthreads \
          --enable-v4l2-m2m \
          --disable-outdev=fbdev \
          --disable-indev=fbdev \
          --enable-small \
          --disable-xmm-clobber-test \
          --disable-debug \
          --enable-lto \
          --disable-neon-clobber-test \
          --disable-programs \
          --disable-postproc
        
        # If configure fails, show the config.log
        if [ $? -ne 0 ]; then
          echo "Configure failed. Contents of config.log:"
          cat ffbuild/config.log
          exit 1
        fi

    - name: Build FFmpeg
      run: |
        make -j$(nproc)
        make install

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ffmpeg-android-arm64
        path: prebuilt/android-arm64/ffmpeg
        if-no-files-found: error
