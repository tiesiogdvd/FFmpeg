name: Build FFmpeg Android Libraries

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  NDK_VERSION: 26.2.11394342
  API_LEVEL: 21

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64-v8a, armeabi-v7a, x86, x86_64]
        include:
          - arch: arm64-v8a
            cpu: armv8-a
            cross_prefix: aarch64-linux-android-
            cc_prefix: aarch64-linux-android
            arch_flag: aarch64
          - arch: armeabi-v7a
            cpu: armv7-a
            cross_prefix: arm-linux-androideabi-
            cc_prefix: armv7a-linux-androideabi
            arch_flag: arm
          - arch: x86
            cpu: i686
            cross_prefix: i686-linux-android-
            cc_prefix: i686-linux-android
            arch_flag: x86
          - arch: x86_64
            cpu: x86-64
            cross_prefix: x86_64-linux-android-
            cc_prefix: x86_64-linux-android
            arch_flag: x86_64

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Android NDK
      run: |
        yes | sdkmanager --install "ndk;${{ env.NDK_VERSION }}"
        echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/${{ env.NDK_VERSION }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config

    - name: Configure FFmpeg
      run: |
        ./configure \
          --cross-prefix=${{ matrix.cross_prefix }} \
          --sysroot=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot \
          --prefix=$(pwd)/android-build/${{ matrix.arch }} \
          --pkg-config=pkg-config \
          --enable-version3 \
          --arch=${{ matrix.arch_flag }} \
          --cpu=${{ matrix.cpu }} \
          --target-os=android \
          --enable-neon \
          --enable-asm \
          --enable-inline-asm \
          --ar=llvm-ar \
          --cc=${{ matrix.cc_prefix }}${{ env.API_LEVEL }}-clang \
          --cxx=${{ matrix.cc_prefix }}${{ env.API_LEVEL }}-clang++ \
          --ranlib=llvm-ranlib \
          --strip=llvm-strip \
          --nm=llvm-nm \
          --disable-autodetect \
          --enable-cross-compile \
          --enable-pic \
          --enable-jni \
          --enable-optimizations \
          --enable-swscale \
          --disable-static \
          --enable-shared \
          --enable-pthreads \
          --enable-v4l2-m2m \
          --disable-outdev=fbdev \
          --disable-indev=fbdev \
          --enable-small \
          --disable-debug \
          --enable-lto \
          --disable-neon-clobber-test \
          --disable-programs \
          --disable-postproc \
          --enable-protocol=http \
          --enable-protocol=https \
          --enable-openssl \
          --enable-network

    - name: Build FFmpeg
      run: |
        make -j$(nproc)
        make install

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ffmpeg-android-libs-${{ matrix.arch }}
        path: android-build/${{ matrix.arch }}/lib/*.so

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        files: android-build/${{ matrix.arch }}/lib/*.so
        tag_name: v${{ github.run_number }}
        name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
